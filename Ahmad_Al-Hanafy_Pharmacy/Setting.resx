<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>